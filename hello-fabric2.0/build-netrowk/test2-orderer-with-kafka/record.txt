1、搭建zookeeper和kafka集群，参考https://github.com/YongYuIT/Fabric-study/tree/master/hello-kafka

	1.1 准备Java环境
	$ java -version
	java version "1.8.0_211"
	Java(TM) SE Runtime Environment (build 1.8.0_211-b12)
	Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)
	$ javac -version
	javac 1.8.0_211
	
	1.2 准备docker，docker-compose环境
	$ docker version
	Client:
	Version:           18.09.6
	API version:       1.39
	Go version:        go1.10.8
	Git commit:        481bc77
	Built:             Sat May  4 02:35:57 2019
	OS/Arch:           linux/amd64
	Experimental:      false

	Server: Docker Engine - Community
	Engine:
	Version:          18.09.6
	API version:      1.39 (minimum version 1.12)
	Go version:       go1.10.8
	Git commit:       481bc77
	Built:            Sat May  4 01:59:36 2019
	OS/Arch:          linux/amd64
	Experimental:     false
	$ docker-compse -version
	docker-compose version 1.25.0dev, build f764faa8
	docker-py version: 3.7.2
	CPython version: 3.7.3
	OpenSSL version: OpenSSL 1.1.0j  20 Nov 2018
	
	1.3 下载解压zookeeper安装包，编写zookeeper配置文件
	$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/stable/apache-zookeeper-3.5.7-bin.tar.gz
	$ tar xvf apache-zookeeper-3.5.7-bin.tar.gz
	$ cd apache-zookeeper-3.5.7-bin/conf/
	$ cp zoo_sample.cfg zoo.cfg
	$ echo "server.1=test_1.thinking.com:2888:3888" >> zoo.cfg
	$ echo "server.2=test_2.thinking.com:2888:3888" >> zoo.cfg
	$ echo "server.3=test_3.thinking.com:2888:3888" >> zoo.cfg


	