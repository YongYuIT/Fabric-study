apiVersion: v1
kind: ReplicationController ####type of RC
metadata:
  name: peer1-org1 ####name of RC, unique
spec:
  replicas: 1 ####Num of copy for Pod
  selector:
    app: peer1-org1 ####expected label for Pod
  template: ####Pod instance
    metadata:
      labels:
         app: peer1-org1 ####label for Pod copy
    spec:
      containers: ####def of container in Pod
        - name: peer1-org1 ####container name
          image: hyperledger/fabric-peer ####container img
          env:
            - name: CORE_VM_ENDPOINT
              value: unix:///host/var/run/docker.sock
            - name: FABRIC_LOGGING_SPEC
              value: INFO
            - name: CORE_PEER_TLS_ENABLED
              value: 'false' ####修改3
            - name: CORE_PEER_GOSSIP_USELEADERELECTION
              value: 'true'
            - name: CORE_PEER_GOSSIP_ORGLEADER
              value: 'false'
            - name: CORE_PEER_PROFILE_ENABLED
              value: 'true'
            - name: CORE_PEER_TLS_CERT_FILE
              value: /etc/hyperledger/fabric/tls/server.crt
            - name: CORE_PEER_TLS_KEY_FILE
              value: /etc/hyperledger/fabric/tls/server.key
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: /etc/hyperledger/fabric/tls/ca.crt
            - name: CORE_PEER_ID
              value: peer1.org1.example.com
            - name: CORE_PEER_ADDRESS
              value: peer1-org1-example-com:8051
            - name: CORE_PEER_LISTENADDRESS
              value: 0.0.0.0:8051
            - name: CORE_PEER_CHAINCODEADDRESS
              value: peer1-org1-example-com:8052
            - name: CORE_PEER_CHAINCODELISTENADDRESS
              value: 0.0.0.0:8052
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: peer0-org1-example-com:7051
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: peer1-org1-example-com:8051
            - name: CORE_PEER_LOCALMSPID
              value: Org1MSP
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          imagePullPolicy: IfNotPresent
          command: ["peer"]
          args: ["node","start"]
          ports:
            - containerPort: 8051
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock-volume
            - mountPath: /etc/hyperledger/fabric/msp
              name: peer-msp
            - mountPath: /etc/hyperledger/fabric/tls
              name: peer-tls
            - mountPath: /opt/gopath/src/github.com/chaincode
              name: chain-code
            - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
              name: crypto-config
            - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
              name: channel-artifacts
      volumes:
        - name: docker-sock-volume
          hostPath:
            path: /var/run/docker.sock
        - name: peer-msp
          hostPath:
            path: /mnt/hgfs/go-env/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp
        - name: peer-tls
          hostPath:
            path: /mnt/hgfs/go-env/fabric-samples/first-network/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls
        - name: chain-code
          hostPath:
            path: /mnt/hgfs/go-env/fabric-samples/chaincode
        - name: crypto-config
          hostPath:
            path: /mnt/hgfs/go-env/fabric-samples/first-network/crypto-config
        - name: channel-artifacts
          hostPath:
            path: /mnt/hgfs/go-env/fabric-samples/first-network/channel-artifacts