########fabric1.4多机部署，改自fabric-sample项目
########参考https://www.cnblogs.com/llongst/p/9571363.html

ip分布:
orderer:   192.168.186.185
peer0-org1:192.168.186.186
peer1-org1:192.168.186.187

Go环境配置:
export GOROOT=/mnt/hgfs/env-path/go
export GOPATH=/mnt/hgfs/env-path/go-path
export PATH=$PATH:$GOROOT/bin
export PATH=$PATH:$GOPATH/bin

Fabri环境配置
git clone https://github.com/hyperledger/fabric-samples.git
go get github.com/hyperledger/fabric
########build tools
$ cd $GOPATH/src/github.com/hyperledger/fabric/common/tools/cryptogen/
$ sudo apt-get install gcc
$ go build
$ go install
$ cd $GOPATH/src/github.com/hyperledger/fabric/common/tools/configtxgen/
$ go build
$ go install

$ cd /mnt/hgfs/env-path/fabric-samples/first-network/
$ ./byfn.sh generate

HOST环境
192.168.186.185    orderer.example.com
192.168.186.186    peer0.org1.example.com
192.168.186.187    peer1.org1.example.com

糅合fabric-samples\first-network\base里面的连个docker compose文件，得到orderer的配置
有1处修改，已标注
在机器orderer上启动排序服务
$ sudo groupadd docker
$ sudo gpasswd -a ${USER} docker
$ sudo service docker restart
$ newgrp - docker
$ docker-compose -f orderer.yaml up -d
$ docker logs c845d372f040

同理，创建peer0.org1和peer1.org1
$ docker-compose -f peer0.org1.yaml up -d
$ docker-compose -f peer1.org1.yaml up -d

在peer0-org1上
$ docker exec -it a3a7b09ff517 /bin/bash
# peer channel list
# export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
# export CHANNEL_NAME=mychannel
# peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/channel.tx
# peer channel join -b ${CHANNEL_NAME}.block
# peer channel list
########将生成的${CHANNEL_NAME}.block考出来，放到其他共享给其他peer
$ docker cp a3a7b09ff517:/opt/gopath/src/github.com/hyperledger/fabric/peer/mychannel.block /mnt/hgfs/env-path/

在peer1-org0上
$ docker cp /mnt/hgfs/env-path/mychannel.block fb4f52989fb2:/opt/gopath/src/github.com/hyperledger/fabric/peer/
# export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
# export CHANNEL_NAME=mychannel
# peer channel join -b ${CHANNEL_NAME}.block
# peer channel list
########测试成功！！！！