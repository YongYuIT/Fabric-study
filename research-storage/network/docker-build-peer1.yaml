version: '2'
 
volumes:
  peer1.yong.thinking.com:
 
networks:
  thinking:
 
services:
  peer1.yong.thinking.com:
    image: hyperledger/fabric-peer
    container_name: peer1.yong.thinking.com
    environment:
      - CORE_PEER_ID=peer1.yong.thinking.com
      - CORE_PEER_ADDRESS=peer1.yong.thinking.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.yong.thinking.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.yong.thinking.com:7051
      - CORE_PEER_LOCALMSPID=MyPeerMSP
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      #- COMPOSE_PROJECT_NAME=test-fabric
      #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_thinking
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_thinking
      - CORE_LOGGING_LEVEL=INFO
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
        - /var/run/:/host/var/run/
        - $PWD/crypto-config/peerOrganizations/yong.thinking.com/peers/peer1.yong.thinking.com/msp:/etc/hyperledger/fabric/msp
        - $PWD/crypto-config/peerOrganizations/yong.thinking.com/peers/peer1.yong.thinking.com/tls:/etc/hyperledger/fabric/tls
        - peer1.yong.thinking.com:/var/hyperledger/production
    #command: peer node start
    command: /bin/bash
    ports:
      - 8051:7051
      - 8053:7053
    networks:
      - thinking
    tty: true

