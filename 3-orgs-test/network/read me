ref to《区块链三十二 fabric-sdk-go》

docker stop cli \
            peer0.yong.thinking.com \
            peer1.yong.thinking.com \
            peer0.guo.thinking.com \
            peer1.guo.thinking.com \
            peer0.ben.thinking.com \
            peer1.ben.thinking.com \
            thinking_orderer_host.thinking.com

docker rm cli \
            peer0.yong.thinking.com \
            peer1.yong.thinking.com \
            peer0.guo.thinking.com \
            peer1.guo.thinking.com \
            peer0.ben.thinking.com \
            peer1.ben.thinking.com \
            thinking_orderer_host.thinking.com

docker network rm network_thinking

#####################################################################################################################################################

cryptogen generate --config crypto-config-order.yaml
cryptogen generate --config crypto-config-peer.yaml

#####################################################################################################################################################

rm -rf configtx.yaml
ln -s ./configtx/configtx1.yaml configtx.yaml
mkdir channel-artifacts
configtxgen -profile ThinkingGene -outputBlock ./channel-artifacts/genesis.block

rm -rf configtx.yaml
ln -s ./configtx/configtx2.yaml configtx.yaml
export CHANNEL_NAME=mythnkingchannel
configtxgen -profile ThinkingChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME

configtxgen -profile ThinkingChannel -outputAnchorPeersUpdate ./channel-artifacts/YongPeerOrganchors.tx -channelID $CHANNEL_NAME -asOrg YongPeerOrg
configtxgen -profile ThinkingChannel -outputAnchorPeersUpdate ./channel-artifacts/GuoPeerOrganchors.tx -channelID $CHANNEL_NAME -asOrg GuoPeerOrg
configtxgen -profile ThinkingChannel -outputAnchorPeersUpdate ./channel-artifacts/BenPeerOrganchors.tx -channelID $CHANNEL_NAME -asOrg BenPeerOrg

#####################################################################################################################################################


docker-compose -f docker-build-orderer.yaml up -d &
docker-compose -f docker-build-peer.yaml up -d &

#####################################################################################################################################################

docker-compose -f docker-build-cli.yaml up -d
docker exec -it cli /bin/bash
peer channel list

export CHANNEL_NAME=mythnkingchannel
peer channel create -o thinking_orderer_host.thinking.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/thinking.com/orderers/thinking_orderer_host.thinking.com/msp/tlscacerts/tlsca.thinking.com-cert.pem
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

source /cmd/change_to_peer1.yong.sh
echo $CORE_PEER_ADDRESS
peer channel list
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

source /cmd/change_to_peer0.guo.sh
echo $CORE_PEER_ADDRESS
peer channel list
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

source /cmd/change_to_peer1.guo.sh
echo $CORE_PEER_ADDRESS
peer channel list
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

source /cmd/change_to_peer0.ben.sh
echo $CORE_PEER_ADDRESS
peer channel list
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

source /cmd/change_to_peer1.ben.sh
echo $CORE_PEER_ADDRESS
peer channel list
peer channel join -b ${CHANNEL_NAME}.block
peer channel list

#####################################################################################################################################################

export CODE_NAME=test_fuck_20180824004

source /cmd/change_to_peer0.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer1.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer0.guo.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer1.guo.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer0.ben.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer1.ben.sh
echo $CORE_PEER_ADDRESS
peer chaincode install -n ${CODE_NAME} -v v0 -p github.com/hello-word/
peer chaincode list --installed

source /cmd/change_to_peer0.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode instantiate -o thinking_orderer_host.thinking.com:7050 \
                           --tls $CORE_PEER_TLS_ENABLED \
                           --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/thinking.com/orderers/thinking_orderer_host.thinking.com/msp/tlscacerts/tlsca.thinking.com-cert.pem \
                           -C ${CHANNEL_NAME} \
                           -n ${CODE_NAME} \
                           -v v0 \
                           -c '{"Args":["init","a","100","b","200"]}' \
                           -P "OR('YongPeerMSP.member','GuoPeerMSP.member')"
peer chaincode list -C ${CHANNEL_NAME} --instantiated

source /cmd/change_to_peer1.guo.sh
echo $CORE_PEER_ADDRESS
peer chaincode list -C ${CHANNEL_NAME} --instantiated

source /cmd/change_to_peer1.ben.sh
echo $CORE_PEER_ADDRESS
peer chaincode list -C ${CHANNEL_NAME} --instantiated

source /cmd/change_to_peer0.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode invoke -o thinking_orderer_host.thinking.com:7050 \
                      --tls $CORE_PEER_TLS_ENABLED \
                      --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/thinking.com/orderers/thinking_orderer_host.thinking.com/msp/tlscacerts/tlsca.thinking.com-cert.pem \
                      -C ${CHANNEL_NAME} \
                      -n ${CODE_NAME} \
                      -c '{"Args":["set_hello","fuck you cao 20180824001"]}'
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'
source /cmd/change_to_peer1.ben.sh
echo $CORE_PEER_ADDRESS
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'
##结论：没有参与背书的节点（组织）可以查看账本

source /cmd/change_to_peer1.ben.sh
echo $CORE_PEER_ADDRESS
peer chaincode invoke -o thinking_orderer_host.thinking.com:7050 \
                      --tls $CORE_PEER_TLS_ENABLED \
                      --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/thinking.com/orderers/thinking_orderer_host.thinking.com/msp/tlscacerts/tlsca.thinking.com-cert.pem \
                      -C ${CHANNEL_NAME} \
                      -n ${CODE_NAME} \
                      -c '{"Args":["set_hello","fuck you gan 20180824002"]}'
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'
source /cmd/change_to_peer0.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'

source /cmd/change_to_peer1.guo.sh
echo $CORE_PEER_ADDRESS
peer chaincode invoke -o thinking_orderer_host.thinking.com:7050 \
                      --tls $CORE_PEER_TLS_ENABLED \
                      --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/thinking.com/orderers/thinking_orderer_host.thinking.com/msp/tlscacerts/tlsca.thinking.com-cert.pem \
                      -C ${CHANNEL_NAME} \
                      -n ${CODE_NAME} \
                      -c '{"Args":["set_hello","fuck you gan 20180824002"]}'
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'
source /cmd/change_to_peer0.yong.sh
echo $CORE_PEER_ADDRESS
peer chaincode query -C ${CHANNEL_NAME} -n ${CODE_NAME} -c '{"Args":["get_hello"]}'
##结论：没有参与背书的节点（组织）无法变更账本